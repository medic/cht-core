project_name: <your-project-name>
namespace: "<your-namespace>" # e.g. "cht-dev-namespace"
chtversion: 4.2.2
#cht_image_tag: 4.1.1-4.1.1 #- This is filled in automatically by the deploy script. Don't uncomment this line.
couchdb:
  password: <password-value>
  secret: <secret-value>
  user: <user-name>
  uuid: <uuid-value>
  clusteredCouch_enabled: false
  couchdb_node_storage_size: 100Mi
clusteredCouch:
  noOfCouchDBNodes: 3
toleration:   # This is for the couchdb pods. Don't change this unless you know what you're doing.
  key: "dev-couchdb-only"
  operator: "Equal"
  value: "true"
  effect: "NoSchedule"
ingress:
  annotations:
    groupname: "dev-cht-alb"
    tags: "Environment=dev,Team=QA"
    certificate: "arn:aws:iam::<account-id>:server-certificate/2023-wildcard-dev-medicmobile-org-chain"
  host: "gamma-cht.dev.medicmobile.org"
  hosted_zone_id: "<the-hosted-zone-id>"
  load_balancer: "dualstack.k8s-devchtalb-3eb0781cbb-694321496.eu-west-2.elb.amazonaws.com"

environment: "remote"  # "local", "remote"
cluster_type: "eks" # "eks" or "k3s-k3d"
cert_source: "eks-medic" # "eks-medic" or "specify-file-path" or "my-ip-co"
certificate_crt_file_path: "/path/to/certificate.crt" # Only required if cert_source is "specify-file-path"
certificate_key_file_path: "/path/to/certificate.key" # Only required if cert_source is "specify-file-path"

local:  #
  diskPath-1: "/var/lib/couchdb1"
  diskPath-2: "/var/lib/couchdb2"
  diskPath-3: "/var/lib/couchdb3"

# If using clustered couchdb, add the nodes here: node-1: name-of-first-node, node-2: name-of-second-node, etc.
# Add equal number of nodes as specified in clusteredCouch.noOfCouchDBNodes
nodes:
  cht-core-node: "gamma-cht-core" # This is the name of the node where core components will be deployed
  node-1: "gamma-cht-couchdb-1" # This is the name of the first node where couchdb will be deployed
  node-2: "gamma-cht-couchdb-2" # This is the name of the second node where couchdb will be deployed
  node-3: "gamma-cht-couchdb-3" # This is the name of the third node where couchdb will be deployed

remote:
  preExistingEBS: "false" # This should be false unless you want to manage the EBS volume yourself. This should be true only if you have already created the EBS volume. If so, specify the id below.
  preExistingEBSVolumeID: "vol-0123456789abcdefg" # If the above is set to true, if you have already created the EBS volume, put the ID here.
  preExistingEBSVolumeSize: "100Gi" # The size of the EBS volume.
