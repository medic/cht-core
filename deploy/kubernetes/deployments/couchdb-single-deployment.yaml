apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cht.service: couchdb
  name: cht-couchdb
spec:
  replicas: 1
  selector:
    matchLabels:
      cht.service: couchdb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        cht.service: couchdb
    spec:
      tolerations:
      - key: "dev-couchdb-only"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      containers:
        - env:
            - name: COUCHDB_LOG_LEVEL
              value: error
            - name: COUCHDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cht-couchdb-credentials
                  key: COUCHDB_PASSWORD
            - name: COUCHDB_SECRET
              valueFrom:
                secretKeyRef:
                  name: cht-couchdb-credentials
                  key: COUCHDB_SECRET
            - name: COUCHDB_USER
              valueFrom:
                secretKeyRef:
                  name: cht-couchdb-credentials
                  key: COUCHDB_USER
            - name: COUCHDB_UUID
              valueFrom:
                secretKeyRef:
                  name: cht-couchdb-credentials
                  key: COUCHDB_UUID
            - name: SVC_NAME
              value: couchdb.{{ .Values.namespace }}.svc.cluster.local
          image: public.ecr.aws/s5s3h4s7/cht-couchdb:{{ .Values.chtversion }}-{{ .Values.chtversion }}
          name: couchdb
          ports:
            - containerPort: 5984
          resources: {}
          volumeMounts:
            - mountPath: /opt/couchdb/data
              name: couchdb-claim0
      restartPolicy: Always
      volumes:
        - name: couchdb-claim0
          persistentVolumeClaim:
            claimName: couchdb-claim0
status: {}
