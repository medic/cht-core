global
  maxconn 60000
  spread-checks 5
  lua-load-per-thread /usr/local/etc/haproxy/parse_basic.lua
  lua-load-per-thread /usr/local/etc/haproxy/parse_cookie.lua
  lua-load-per-thread /usr/local/etc/haproxy/replace_password.lua
  log stdout len 65535 local2 debug
  tune.bufsize 32768
  tune.buffers.limit 60000

defaults
  mode http
  option http-ignore-probes
  option httplog
  option forwardfor
  option redispatch
  option http-server-close
  timeout client 15000000
  timeout server 360000000
  timeout connect 1500000
  timeout http-keep-alive 5m
  stats enable
  stats refresh 30s
  stats auth $COUCHDB_USER:$COUCHDB_PASSWORD
  stats uri /haproxy?stats

frontend http-in
  bind  $HAPROXY_IP:$HAPROXY_PORT
  acl has_user req.hdr(x-medic-user) -m found
  acl has_cookie req.hdr(cookie) -m found
  acl has_basic_auth req.hdr(authorization) -m found
  declare capture request len 400000
  http-request set-header x-medic-user %[lua.parseBasic] if has_basic_auth
  http-request set-header x-medic-user %[lua.parseCookie] if !has_basic_auth !has_user has_cookie
  http-request capture req.body id 0 # capture.req.hdr(0)
  http-request capture req.hdr(x-medic-service) len 200 # capture.req.hdr(1)
  http-request capture req.hdr(x-medic-user) len 200 # capture.req.hdr(2)
  http-request capture req.hdr(user-agent) len 600 # capture.req.hdr(3)
  capture response header Content-Length len 10 # capture.res.hdr(0)
  http-response set-header Connection Keep-Alive
  http-response set-header Keep-Alive timeout=18000
  log global
  log-format "%ci,%s,%ST,%Ta,%Ti,%TR,%[capture.req.method],%[capture.req.uri],%[capture.req.hdr(1)],%[capture.req.hdr(2)],'%[capture.req.hdr(0),lua.replacePassword]',%B,%Tr,%[capture.res.hdr(0)],'%[capture.req.hdr(3)]'"
  default_backend couchdb-servers

