{
    "language": "erlang",
    "_id": "_design/erlang_filters",
    "filters": {
        "doc_by_place": "% Benchmarking code for Erlang REPL nicked and modified to remove module param from here:\n%  https://erlangcentral.org/wiki/index.php/Measuring_Function_Execution_Time\n% Params: FnName, Params, Rounds, eg:\n%  TC(DeepGet, [DeepGet, [<<\"userCtx\">>, <<\"name\">>], Req], 100000).\n% TC = fun(TC_F, TC_A, TC_N) when TC_N > 0 -> TC_L = tl([begin {TC_T, _Result} = timer:tc(TC_F, TC_A), TC_T end || _ <- lists:seq(1, TC_N)]), TC_Min = lists:min(TC_L), TC_Max = lists:max(TC_L), TC_Med = lists:nth(round((TC_N - 1) / 2), lists:sort(TC_L)), TC_Avg = round(lists:foldl(fun(TC_X, TC_Sum) -> TC_X + TC_Sum end, 0, TC_L) / (TC_N - 1)), io:format(\"Range: ~b - ~b mics~nMedian: ~b mics ~nAverage: ~b mics~n\", [TC_Min, TC_Max, TC_Med, TC_Avg]), TC_Med end.\n\n% Made \"cmd+v futon-ready\" with the following disgusting display of black magic\n% cat scratch.erl | sed 's/%.*//' | sed 's/\"/\\\\\"/'g | sed -e ':a' -e 'N' -e '$!ba' -e 's/\\n/ /g' | pbcopy\nfun ({Doc}, {Req}) ->\n\n  % Some values are wrapped in a tuple for some arbitrary reason\n  %  i.e. {[{...}]} instead of [{...}]\n  % Instead of working this out we're just guarding against it\n  % TODO work out all the rules for this so we can optimise this function\n  %      away for better performance\n  SafeGetValue = fun(Key, PropListMaybe, Default) ->\n    if\n      is_tuple(PropListMaybe) andalso size(PropListMaybe) == 1 ->\n        proplists:get_value(Key, element(1, PropListMaybe), Default);\n      is_list(PropListMaybe) ->\n        proplists:get_value(Key, PropListMaybe, Default);\n      true ->\n        Default\n    end\n  end,\n\n  DeepGet = fun(DeepGet, KeyList, PropList) ->\n    if\n      length(KeyList) > 1 andalso PropList == [] ->\n        undefined;\n      length(KeyList) == 1 ->\n        SafeGetValue(hd(KeyList), PropList, undefined);\n      true ->\n        DeepGet(DeepGet, tl(KeyList), SafeGetValue(hd(KeyList), PropList, []))\n    end\n  end,\n\n  FindPlace = fun(FindPlace, Place, QueryId) ->\n    if\n      Place == undefined ->\n        false;\n      true ->\n        case SafeGetValue(<<\"_id\">>, Place, undefined) =:= QueryId of\n          true -> true;\n          false -> FindPlace(FindPlace, SafeGetValue(<<\"parent\">>, Place, undefined), QueryId)\n        end\n    end\n  end,\n\n  Ok = fun(Place) ->\n    QueryId = DeepGet(DeepGet, [<<\"query\">>, <<\"id\">>], Req),\n    case QueryId =:= undefined of\n      true -> true; % Admin\n      false ->\n        case Place =:= undefined of\n          true -> DeepGet(DeepGet, [<<\"query\">>, <<\"unassigned\">>], Req) =:= <<\"true\">>;\n          false -> FindPlace(FindPlace, Place, QueryId)\n        end\n    end\n  end,\n\n  CouchUser = list_to_binary([\n      <<\"org.couchdb.user:\">>,\n      DeepGet(DeepGet, [<<\"userCtx\">>, <<\"name\">>], Req)]),\n\n  case proplists:get_value(<<\"_id\">>, Doc) of\n    <<\"design/medic\">> -> false;     % Never replicate the ddoc as it's too big.\n                                     % Changes are tracked in the watchDesignDoc function of the DB service.\n    <<\"resources\">> -> true;\n    CouchUser -> true;\n    _ -> case proplists:get_value(<<\"type\">>, Doc) of\n          <<\"data_record\">> ->\n            case proplists:get_value(<<\"kujua_message\">>, Doc) of\n              true ->\n                Tasks = proplists:get_value(<<\"tasks\">>, Doc, []),\n                if\n                  length(Tasks) > 0 ->\n                    % Outgoing message\n                    Ok(\n                      proplists:get_value(<<\"contact\">>,\n                        element(1, hd(proplists:get_value(<<\"messages\">>,\n                          element(1, hd(Tasks)))))));\n                  true ->\n                    false\n                end;\n              _ ->\n                % Incoming message\n                Ok(proplists:get_value(<<\"contact\">>, Doc))\n            end;\n          <<\"form\">> -> true;\n          <<\"clinic\">> -> Ok(Doc);\n          <<\"district_hospital\">> -> Ok(Doc);\n          <<\"health_center\">> -> Ok(Doc);\n          <<\"person\">> -> Ok(Doc);\n          _ -> false\n        end\n  end\nend.\n"
    },
    "kanso": {
        "config": {
            "dependencies": {
                "traditional-couchapp": "~0.1.1"
            },
            "description": "Optimised Erlang filters",
            "name": "_design/erlang_filters",
            "traditional-couchapp": ".",
            "version": "0.0.1",
            "minify": false
        },
        "build_time": "2016-02-05T15:29:38Z",
        "kanso_version": "0.5.0"
    }
}
