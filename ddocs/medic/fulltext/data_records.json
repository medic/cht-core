{
  "analyzer": "perfield:{default:\"standard\"}",
  "index": "function(doc) {\n\n    if (doc.type !== 'data_record') {\n      return null;\n    }\n\n    var indexField = function(key, value, ret, id) {\n      // if field key ends in _date, try to parse as date.\n      if (/_date$/.test(key)) {\n        var date = new Date(value);\n        if (date) {\n          ret.add(date, { field: key, type: 'date' });\n        } else {\n          log.info('failed to parse date \"' + key + '\" on ' + id);\n        }\n      } else if (typeof value === 'number') {\n        ret.add(value, { field: key, type: 'int' });\n      } else if (key === 'form') {\n        ret.add(value);\n        // string type forces an exact case insensitive match\n        ret.add(value, { field: key, type: 'string' });\n      } else if (typeof value === 'string') {\n        ret.add(value);\n        ret.add(value, {\n          field: key === '_id' ? 'uuid' : key\n        });\n      }\n    };\n\n    var ret = new Document(),\n        skip = ['type', '_rev', 'refid', 'id'],\n        type;\n\n    // index form fields and _id\n    Object.keys(doc).forEach(function(key) {\n      if (skip.indexOf(key) === -1) {\n        indexField(key, doc[key], ret, doc._id);\n      }\n    });\n\n    var parent = doc.contact;\n    while(parent) {\n      if (parent._id) {\n        ret.add(parent._id, { field: 'clinic' });\n      }\n      parent = parent.parent;\n    }\n\n    if (doc.fields) {\n      Object.keys(doc.fields).forEach(function(key) {\n        indexField(key, doc.fields[key], ret, doc._id);\n      });\n    }\n\n    if (doc.form === 'R') {\n      // We don't have an LMP date so add an expected_date field with our best guess.\n      // Mostly for analytics and usage statistics.\n      var expected = new Date(doc.reported_date);\n      var daysToAdd = 266; // 40 weeks, minus 2 weeks for date of conception\n      expected.setDate(expected.getDate() + daysToAdd);\n      ret.add(expected, { field: 'expected_date', type: 'date' });\n    }\n\n    if (doc.form) {\n      type = 'report';\n    } else if (doc.kujua_message) {\n      type = 'messageoutgoing';\n      if (doc.tasks && doc.tasks[0]) {\n        ret.add(doc.tasks[0].state, { field: 'state' });\n      }\n    } else {\n      type = 'messageincoming';\n    }\n\n    ret.add(type, { field: 'type' });\n\n    ret.add(\n      doc.errors ? doc.errors.length : 0,\n      { field: 'errors', type: 'int' }\n    );\n\n    ret.add(doc.verified ? 'true' : 'false', { field: 'verified' });\n\n    if (doc.contact && doc.contact._id) {\n      ret.add(doc.contact._id, { field: 'contact' });\n    }\n\n    return ret;\n  }"
}
