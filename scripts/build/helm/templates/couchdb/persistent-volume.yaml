{{- if eq (toString .Values.couchdb_data.preExistingDataAvailable) "true" }}
{{- if eq .Values.cluster_type "gke" }}
{{- if eq (toString .Values.couchdb.clusteredCouchEnabled) "false" }}
{{- include "platforms.persistentVolume" (dict "platform" "gcp" "namespace" .Values.namespace "storageSize" .Values.couchdb.persistent_disk.size "diskName" .Values.couchdb.persistent_disk.diskName "partition" (.Values.couchdb_data.partition | default "0")) }}
{{- else }}
{{- range $i, $e := until (int .Values.clusteredCouch.noOfCouchDBNodes) }}
{{ $nodeNumber := add $i 1 }}
{{- include "platforms.persistentVolume" (dict "platform" "gcp" "namespace" $.Values.namespace "nodeNumber" (toString $nodeNumber) "isMultiNode" true "storageSize" $.Values.couchdb.persistent_disk.size "diskName" (index $.Values.couchdb.persistent_disk (printf "diskName-%d" $nodeNumber)) "partition" ($.Values.couchdb_data.partition | default "0")) }}
---
{{- end }}
{{- end }}
{{- else if eq .Values.cluster_type "eks" }}
{{- if eq (toString .Values.couchdb.clusteredCouchEnabled) "false" }}
{{- include "platforms.persistentVolume" (dict "platform" "aws" "namespace" .Values.namespace "storageSize" .Values.ebs.preExistingEBSVolumeSize "volumeHandle" (index .Values.ebs "preExistingEBSVolumeID-1") "partition" (.Values.couchdb_data.partition | default "0")) }}
---
{{- else }}
{{- range $i, $e := until (int $.Values.clusteredCouch.noOfCouchDBNodes) }}
{{ $nodeNumber := add $i 1 }}
{{- include "platforms.persistentVolume" (dict "platform" "aws" "namespace" $.Values.namespace "nodeNumber" (toString $nodeNumber) "isMultiNode" true "storageSize" $.Values.ebs.preExistingEBSVolumeSize "volumeHandle" (index $.Values.ebs (printf "preExistingEBSVolumeID-%d" $nodeNumber)) "partition" ($.Values.couchdb_data.partition | default "0")) }}
---
{{- end }}
{{- end }}
{{- else if eq .Values.cluster_type "k3s-k3d" }}
{{- if eq (toString .Values.couchdb.clusteredCouchEnabled) "false" }}
{{- include "platforms.persistentVolume" (dict "platform" "k3s-k3d" "namespace" .Values.namespace "storageSize" .Values.couchdb.couchdb_node_storage_size "diskPath" (index .Values.local_storage "preExistingDiskPath-1")) }}
---
{{- else }}
{{- range $i, $e := until (int .Values.clusteredCouch.noOfCouchDBNodes) }}
{{ $nodeNumber := add $i 1 }}
{{- include "platforms.persistentVolume" (dict "platform" "k3s-k3d" "namespace" $.Values.namespace "nodeNumber" (toString $nodeNumber) "isMultiNode" true "storageSize" $.Values.couchdb.couchdb_node_storage_size "diskPath" (index $.Values.local_storage (printf "preExistingDiskPath-%d" $nodeNumber))) }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
