1. Make a backup copy of db.
Log on to server, and run :
`cp /path/to/couchdb/data/medic.couch medic-$(date +%Y%d%m%H%M%S).couch`

2. Run deletion script.
See usage for details. </br>
To get the branch id, Go to the branch’s contact page, and copy the UUID from the URL.</br>
E.g. “Test Branch” on lg.dev : `https://lg.dev.medicmobile.org/medic/_design/medic/_rewrite/#/contacts/**52857bf2cef066525b2feb82805fb373**`

Notes :
 - You can practice with the `dryrun` option. That will show you what data would be deleted, without deleting.

 - Timeouts and reindexing : since you are making changes on the db, that will trigger reindexing, which can slow down the db, and make the script fail with timeouts (and other current users of the db too!). Wait around a bit and try again. (You can also see the indexing start and stop in the logs, to know when it's done). You can also extend the os_process_timeout if that helps (set it back when you're done):
`curl <serverUrl>/_node/<nodeName>/_config/couchdb/os_process_timeout`
`curl -X PUT  <serverUrl>/_node/<nodeName>/_config/couchdb/os_process_timeout -d '"100000"'`

 - There is a batchSize, which is set to 200 initially. That is because you want to do small reindexings, to get small timeouts (or none at all!), to not mess up your users. (If your instance is offline then go for it!). You can change batchSize in the script if you're not getting enough records any more.

3. Run the script again, later, to get the stragglers' data
If users have been offline, they could have edited some of the data that you've meanwhile deleted, which will result in a conflict and make the data "reappear" on the server.</br>
Just rerun the script to kill it again.
