# If there is no pre-existing data and clustered couchdb is enabled and the cluster type is k3s-k3d,
# then create a job for each node to create the directory for couchdb data on the host machine.

{{- if and $.Values.couchdb.clusteredCouch_enabled (eq $.Values.cluster_type "k3s-k3d") (not $.Values.couchdb_data.preExistingDataAvailable) }}
{{- range $i, $e := until (int $.Values.clusteredCouch.noOfCouchDBNodes) }}
{{ $nodeNumber := add $i 1 }}
apiVersion: batch/v1
kind: Job
metadata:
  name: create-directory-{{ $.Values.namespace }}-{{ $nodeNumber }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"     # Negative weight ensures it runs before other hooks
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed    # Delete job after it completes
spec:
  template:
    spec:
      tolerations:
      - key: {{ $.Values.toleration.key }}
        operator: {{ $.Values.toleration.operator }}
        value: {{ $.Values.toleration.value | quote }}
        effect: {{ $.Values.toleration.effect }}
      nodeSelector:
        kubernetes.io/hostname: {{ index $.Values.nodes (printf "node-%d" $nodeNumber) }}
      restartPolicy: Never
      containers:
      - name: create-directory
        image: busybox
        command: ['sh', '-c', 'mkdir -p /var/lib/{{ $.Values.namespace }}-couchdb{{ $nodeNumber }}']
        securityContext:
          runAsUser: 0
        volumeMounts:
        - mountPath: /var/lib
          name: host-var-lib
      volumes:
      - name: host-var-lib
        hostPath:
          path: /var/lib
          type: DirectoryOrCreate
--- #Don't remove the separator. We need this to separate yamls generated by the range command.
{{- end }}
{{- end }}
