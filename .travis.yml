# Setting up as a java project allows us to ensure that the JRE/JDK version used
# is actually compatible with webdriver-manager.
language: java
sudo: true
jdk:
  - oraclejdk8

addons:
  chrome: "stable"

services:
  # docker is used for couchdb 2.0 (not currently available as a travis service)
  - docker

env:
  matrix:
  - NODE_VERSION=8
  - NODE_VERSION=9
  global:
  - COUCH_URL=http://admin:pass@localhost:5984/medic
  - API_URL=http://admin:pass@localhost:5988
  - COUCH_NODE_NAME=nonode@nohost
  #AWS Access Key Id and AWS Secret Access Key encrypted by travis to access the S3 buckets where reports and screenshots are saved
  - secure: TR1UN2r3beDtIF+VJpLF2ocTv/uxuOKyVWWhzMLre0ZrrBaIP1sLZV7Z4S/km5M92EfPgGW87BogdWE/R+kTTRiPTCbFB/U/3jFKxEZRXKST66YK5JMwsYqb17UtZtFdqEtO9GGbAVzXwpZfMMoXvlKNrors2W32xBm2uIkOSpI=
  - secure: Q8RH65NClRBryxfvlwHQjeR4wGs+GXeUBRIBd1kspAM7Uv+5K3iP+q/TPCIrTL/OpJ5tyCYfeq5hKIFFwrY3JikNXnyHICOjXPE6zSLUm8E8NHaP/orPNWjze2x4yDSRCifqzr2ZiXVq9sxlZfNbZ9eyJxpPFTYDSpuN9T5UEE0=

before_install:
  # start couchdb 2.x docker instance
  - docker run -d -p 5984:5984 --name couch couchdb:2
  - echo "Starting CouchDB 2.x"
  - until nc -z localhost 5984; do sleep 1; done
  # - echo "CouchDB Started, version "
  # - curl http://localhost:5984 # 2> /dev/null | jq .version
  - pip install --user awscli
  - export PATH=$PATH:$HOME/.local/bin

install:
  nvm install $NODE_VERSION

before_script:
  - nvm use $NODE_VERSION
  - npm install -g npm@^5.3.0
  - npm -v
  - npm install
  # Create couchdb system tables (this has to be done manually on couchdb 2.0)
  - curl -X PUT http://127.0.0.1:5984/{_users,_replicator,_global_changes,_metadata,admins}
  - curl -X PUT localhost:5984/medic
  - bash ./scripts/ci/setup.sh
  - npm install kanso -g
  - npm install grunt-cli -g
  - npm --prefix api install
  - npm --prefix sentinel install
  - ./node_modules/.bin/webdriver-manager update
  - ./node_modules/.bin/webdriver-manager start &
  - until nc -z localhost 4444; do sleep 1; done

script:
  - node --stack_size=10000 `which grunt` ci

after_script:
- |
  if [${TRAVIS_PULL_REQUEST}=\"true\"]; then
   aws s3 cp tests/results s3://medic-e2e/PR_$TRAVIS_PULL_REQUEST/  --recursive
  else
   aws s3 cp tests/results s3://medic-e2e/BUILD_$TRAVIS_BUILD_NUMBER/JOB_$TRAVIS_JOB_NUMBER/  --recursive
  fi

after_success:
 - python ./scripts/ci/travis_after_all.py
 - export $(cat .to_export_back)
 - |
     if [ "$BUILD_LEADER" = "YES" ]; then
       if [ "$BUILD_AGGREGATE_STATUS" = "others_succeeded" ]; then
         echo "All jobs succeeded! Publishing..."
         ./scripts/ci/push_to_staging.sh
         bash ./scripts/ci/push_to_market.sh
       else
         echo "Some jobs failed. Not publishing."
       fi
     fi

after_failure:
  - docker ps -a
  - docker logs couch

notifications:
  webhooks:
    urls:
      - https://medic.slack.com/services/hooks/travis?token=xcYT8yusfEdSwLskhBxK4Vwj
    on_success: change
    on_failure: always
  email:
    recipients:
      - dev@medicmobile.org
