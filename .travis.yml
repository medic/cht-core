# Setting up as a java project allows us to ensure that the JRE/JDK version used
# is actually compatible with webdriver-manager.
language: java
sudo: true
jdk: oraclejdk8

addons:
  chrome: 'stable'

services:
  # docker is used for couchdb 2.0 (not currently available as a travis service)
  - docker

env:
  matrix:
    - USE_COUCHDB=true TEST_SUITE=integration NODE_VERSION=8 
    - USE_COUCHDB=true TEST_SUITE=integration NODE_VERSION=10
    - USE_COUCHDB=true TEST_SUITE=performance NODE_VERSION=8
  global:
    - COUCH_URL=http://admin:pass@localhost:5984/medic
    - COUCH_NODE_NAME=nonode@nohost
    #AWS Access Key Id and AWS Secret Access Key encrypted by travis to access the S3 buckets where reports and screenshots are saved
    - secure: TR1UN2r3beDtIF+VJpLF2ocTv/uxuOKyVWWhzMLre0ZrrBaIP1sLZV7Z4S/km5M92EfPgGW87BogdWE/R+kTTRiPTCbFB/U/3jFKxEZRXKST66YK5JMwsYqb17UtZtFdqEtO9GGbAVzXwpZfMMoXvlKNrors2W32xBm2uIkOSpI=
    - secure: Q8RH65NClRBryxfvlwHQjeR4wGs+GXeUBRIBd1kspAM7Uv+5K3iP+q/TPCIrTL/OpJ5tyCYfeq5hKIFFwrY3JikNXnyHICOjXPE6zSLUm8E8NHaP/orPNWjze2x4yDSRCifqzr2ZiXVq9sxlZfNbZ9eyJxpPFTYDSpuN9T5UEE0=

#matrix:
#  allow_failures:
#    - env: NODE_VERSION="lts/*" TEST_SUITE=performance

before_install:
  - export PATH=$PATH:$HOME/.local/bin
  - export PATH=$HOME/.npm/bin:$PATH
  - ./scripts/travis/couch-start

install: nvm install $NODE_VERSION

before_script:
  - mkdir tests/logs
  - nvm use $NODE_VERSION
  - npm install -g grunt-cli
  - ./scripts/travis/couch-config

script:
  - |
    if [[ "$TEST_SUITE" = 'integration' ]]; then
      node --stack_size=10000 `which grunt` ci-integration-e2e
    elif [[ "$TEST_SUITE" = 'performance' ]]; then
      node --stack_size=10000 `which grunt` ci-performance
    else
      echo "ERROR No or unknown value for TEST_SUITE env var ('${TEST_SUITE}')."
      exit 1
    fi

#jobs:
#  include:
#    - if: type != pull_request
#      stage: 'Publish binaries'
#      script: node --stack_size=10000 `which grunt` publish
#      env: NODE_VERSION=8 PUBLISH_TO=horti

stages:
  - compile
  - test
  - publish

jobs:
  include:
    - stage: compile
      env: NODE_VERSION=10
      before_script:
        - ./scripts/travis/npm-init
        - npm install -g grunt-cli
      script:
        - node --stack_size=10000 `which grunt` ci-build  # build the app
        - node --stack_size=10000 `which grunt` ci-unit   # run static analysis and unit tests
        - cd config/standard && npm ci && npm run travis  # run standard config tests
    - stage: publish
      if: type != pull_request
      env: NODE_VERSION=10
      before_script: npm install -g grunt-cli
      script: node --stack_size=10000 `which grunt` publish

#after_failure:
#  - pip install --user awscli
#  - |
#    (cd tests/logs
#      for log in $(ls *.log); do
#        echo "---------- $log ----------"
#        tail "$log"
#        echo "--------------------------"
#      done
#    )
#
#    [[ "$TRAVIS_BUILD_STAGE_NAME" = "Test" ]] || return
#
#    if [[ "$TRAVIS_PULL_REQUEST" = true ]]; then
#      S3_PATH=s3://medic-e2e/PR_$TRAVIS_PULL_REQUEST
#    else
#      S3_PATH=s3://medic-e2e/BUILD_$TRAVIS_BUILD_NUMBER/JOB_$TRAVIS_JOB_NUMBER
#    fi
#
#    echo "Uploading logs and screenshots to ${S3_PATH}..."
#
#    docker logs couch > tests/logs/couch.log 2>&1
#
#    aws s3 cp tests/results "$S3_PATH"/test-results --recursive
#    aws s3 cp tests/logs "$S3_PATH"/ --recursive
#
#notifications:
#  slack:
#    rooms:
#      - medic:SdzCLsD56UOr5U8ujzOCMDJd#development
#    template:
#      - "<%{build_url}|%{author}'s build> %{result}. Commit: %{commit_message} (<%{compare_url}|compare>)"
#    on_success: change
#    on_failure: always
