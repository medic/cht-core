{
  "name": "medic",
  "version": "4.14.0",
  "private": true,
  "license": "AGPL-3.0-only",
  "repository": {
    "type": "git",
    "url": "git://github.com/medic/cht-core.git"
  },
  "engines": {
    "node": ">=20.11.0",
    "npm": ">=10.2.4"
  },
  "workspaces": [
    "./shared-libs/*"
  ],
  "scripts": {
    "postinstall": "patch-package",
    "prepare": "husky install",
    "-- DEV BUILD SCRIPTS": "-----------------------------------------------------------------------------------------------",
    "build-ddocs": "mkdir -p build/ddocs && cp -r ddocs/* build/ddocs/ && node scripts/build/cli setDdocsVersion && node scripts/build/cli setBuildInfo && node ./scripts/build/ddoc-compile.js primary && mkdir -p api/build/ddocs && cp build/ddocs/*.json api/build/ddocs/",
    "build-dev": "./scripts/build/build-prepare.sh && npm run --prefix shared-libs/cht-datasource build && npm run build-webapp-dev && ./scripts/build/copy-static-files.sh",
    "build-dev-watch": "npm run build-dev && (npm run --prefix shared-libs/cht-datasource build-watch & npm run --prefix webapp build-watch & node ./scripts/build/watch.js)",
    "build-documentation": "./scripts/build/build-documentation.sh",
    "build-webapp-dev": "cd webapp && npm run build -- --configuration=development && npm run compile",
    "build-cht-form": "./scripts/build/build-prepare.sh && cd webapp && npm run build:cht-form",
    "copy-api-resources": "cp -r api/src/public/* api/build/static/",
    "dev-api": "./scripts/build/copy-static-files.sh && (npm run --prefix shared-libs/cht-datasource build-watch & npm run --prefix api run-watch)",
    "dev-sentinel": "npm run --prefix shared-libs/cht-datasource build-watch & npm run --prefix sentinel run-watch",
    "local-images": "export VERSION=$(node ./scripts/build/get-version.js) && ./scripts/build/build-service-images.sh && node scripts/build/cli localDockerComposeFiles",
    "update-service-worker": "node scripts/build/cli updateServiceWorker",
    "-- DEV TEST SCRIPTS": "-----------------------------------------------------------------------------------------------",
    "integration-all-local": "export VERSION=$(node ./scripts/build/get-version.js) && ./scripts/build/build-service-images.sh && npm run ci-integration-all",
    "integration-sentinel-local": "export VERSION=$(node ./scripts/build/get-version.js) && ./scripts/build/build-service-images.sh && npm run ci-integration-sentinel",
    "integration-api": "./api/tests/integration/couch-start.sh && mocha --config ./api/tests/integration/.mocharc.js && ./api/tests/integration/couch-stop.sh",
    "integration-all-k3d-local": "export VERSION=$(node ./scripts/build/get-version.js) && ./scripts/build/build-service-images.sh && npm run ci-integration-all-k3d",
    "integration-sentinel-k3d-local": "export VERSION=$(node ./scripts/build/get-version.js) && ./scripts/build/build-service-images.sh && npm run ci-integration-sentinel-k3d",
    "integration-cht-form": "wdio run ./tests/integration/cht-form/wdio.conf.js",
    "lint": "eslint --color --cache . && ./scripts/build/blank-link-check.sh && npm run lint-shell",
    "lint-shell": "shellcheck $(./scripts/ci/list-shellscripts.sh)",
    "lint-translations": "node scripts/ci/lint-translations.js",
    "test": "npm run lint && npm run unit && npm run integration-api",
    "unit": "node scripts/build/cli npmCiModules && npm run unit-webapp && npm run unit-admin && npm run unit-shared-lib && npm run unit-api && npm run unit-sentinel",
    "unit-admin": "node ./scripts/ci/run-karma.js",
    "unit-api": "UNIT_TEST_ENV=1 nyc --nycrcPath='api/nyc.config.js' mocha 'api/tests/mocha/**/*.js'",
    "unit-sentinel": "UNIT_TEST_ENV=1 nyc --nycrcPath='sentinel/nyc.config.js' mocha 'sentinel/tests/**/*.js'",
    "unit-shared-lib": "UNIT_TEST_ENV=1 npm test --workspaces --if-present",
    "unit-webapp": "cd webapp && npm run unit:mocha:tz && npm run unit -- --watch=false && npm run unit:cht-form -- --watch=false",
    "unit-webapp-continuous": "cd webapp && npm run unit -- --watch=true",
    "unit-nginx": "cd nginx/tests && make test",
    "unit-haproxy": "cd haproxy/tests && make test",
    "unit-haproxy-healthcheck": "cd haproxy-healthcheck && make test",
    "unit-cht-deploy": "cd scripts/deploy && npm test",
    "wdio-default-mobile-local": "export VERSION=$(node ./scripts/build/get-version.js) && ./scripts/build/build-service-images.sh && wdio run ./tests/e2e/default-mobile/wdio.conf.js --suite=all",
    "wdio-visual-local": "export VERSION=$(node ./scripts/build/get-version.js) && ./scripts/build/build-service-images.sh && wdio run ./tests/e2e/visual/wdio.conf.js --suite=all",
    "wdio-local": "export VERSION=$(node ./scripts/build/get-version.js) && ./scripts/build/build-service-images.sh && wdio run ./tests/e2e/default/wdio.conf.js",
    "apdex-test": "wdio run ./tests/performance/apdex-score/wdio.conf.js",
    "-- CI SCRIPTS ": "-----------------------------------------------------------------------------------------------",
    "build": "./scripts/build/build-ci.sh",
    "ci-compile": "node scripts/ci/check-versions.js && node scripts/build/cli npmCiModules && npm run lint && npm run unit-nginx && npm run unit-haproxy && npm run unit-haproxy-healthcheck && npm run unit-cht-deploy && npm run build && npm run integration-api && npm run unit",
    "ci-integration-all": "mocha --config tests/integration/.mocharc-all.js",
    "ci-integration-all-k3d": "mocha --config tests/integration/.mocharc-k3d.js",
    "ci-integration-sentinel": "mocha --config tests/integration/.mocharc-sentinel.js",
    "ci-integration-sentinel-k3d": "mocha --config tests/integration/.mocharc-sentinel-k3d.js",
    "ci-webdriver-default": "wdio run ./tests/e2e/default/wdio.conf.js",
    "ci-webdriver-default-mobile": "wdio run ./tests/e2e/default-mobile/wdio.conf.js",
    "publish-for-testing": "./scripts/build/build-service-images.sh && mkdir -p images && node scripts/build/cli publishServiceImages && node ./scripts/build/ddoc-compile.js staging && node ./scripts/build/push-ddoc-to-staging.js",
    "test-config-default": "cd config/default && npm run test",
    "upgrade-wdio": "wdio run ./tests/e2e/upgrade/wdio.conf.js"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.3.0",
    "@commitlint/config-conventional": "^19.2.2",
    "@faker-js/faker": "^8.0.2",
    "@medic/eslint-config": "^1.1.0",
    "@medic/translation-checker": "^1.1.0",
    "@octokit/core": "^5.2.0",
    "@octokit/plugin-paginate-graphql": "^4.0.1",
    "@tsconfig/node20": "^20.1.4",
    "@types/chai": "^4.3.6",
    "@types/chai-as-promised": "^7.1.6",
    "@types/jquery": "^3.5.19",
    "@types/lodash": "^4.17.12",
    "@types/lodash-es": "^4.17.9",
    "@types/mocha": "^10.0.1",
    "@types/node": "^20.16.11",
    "@types/pouchdb": "^6.4.0",
    "@types/sinon": "^10.0.16",
    "@typescript-eslint/eslint-plugin": "7.5",
    "@typescript-eslint/parser": "7.5",
    "@typescript-eslint/utils": "8.11",
    "@wdio/allure-reporter": "^8.34.0",
    "@wdio/appium-service": "^8.36.1",
    "@wdio/cli": "^8.35.1",
    "@wdio/devtools-service": "^8.35.1",
    "@wdio/local-runner": "^8.35.1",
    "@wdio/mocha-framework": "^8.35.0",
    "@wdio/spec-reporter": "^8.32.4",
    "allure-commandline": "^2.24.0",
    "appium-uiautomator2-driver": "^3.0.0",
    "browserify": "^17.0.0",
    "browserify-ngannotate": "^2.0.0",
    "chai": "^4.3.8",
    "chai-as-promised": "^7.1.1",
    "chai-exclude": "^2.1.0",
    "chai-like": "^1.1.1",
    "chai-shallow-deep-equal": "^1.4.6",
    "chai-things": "^0.2.0",
    "cht-conf": "^3.21.1",
    "cht-conf-test-harness": "^2.4.3",
    "clean-css-cli": "^5.6.2",
    "couchdb-compile": "^1.11.2",
    "csv": "^6.3.3",
    "csv-writer": "^1.6.0",
    "deep-equal-in-any-order": "^2.0.6",
    "diff": "^5.2.0",
    "doctoc": "^2.2.1",
    "eslint": "^8.49.0",
    "eslint-plugin-angular": "^4.1.0",
    "eslint-plugin-async": "^0.1.1",
    "eslint-plugin-compat": "^4.2.0",
    "eslint-plugin-couchdb": "^0.2.0",
    "eslint-plugin-jasmine": "^4.1.3",
    "eslint-plugin-jsdoc": "^48.2.5",
    "eslint-plugin-json": "^3.1.0",
    "eslint-plugin-no-only-tests": "^3.1.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^6.1.1",
    "eurodigit": "^3.1.3",
    "fetch-cookie": "^3.0.1",
    "flat": "^6.0.0",
    "gaze": "^1.1.3",
    "husky": "^8.0.0",
    "inquirer": "^9.2.11",
    "jasmine-spec-reporter": "^7.0.0",
    "jsdoc": "^4.0.2",
    "json-diff": "^1.0.6",
    "jsverify": "^0.8.4",
    "just-diff": "^6.0.2",
    "karma": "^6.4.2",
    "karma-chrome-launcher": "^3.2.0",
    "karma-coverage": "^2.2.1",
    "karma-firefox-launcher": "^2.1.2",
    "karma-mocha": "^2.0.1",
    "karma-mocha-reporter": "^2.2.5",
    "karma-ng-html2js-preprocessor": "^1.0.0",
    "karma-spec-reporter": "^0.0.36",
    "less": "^4.2.0",
    "loose-envify": "^1.4.0",
    "mocha": "^10.7.3",
    "module-alias": "^2.2.3",
    "nodemon": "^3.0.1",
    "nyc": "^15.1.0",
    "patch-package": "^8.0.0",
    "postcss": "^8.4.29",
    "pouchdb-adapter-memory": "^7.3.1",
    "raw-loader": "^4.0.2",
    "rewire": "^7.0.0",
    "rosie": "^2.1.0",
    "sass": "^1.67.0",
    "sharp": "^0.33.5",
    "shellcheck": "^2.2.0",
    "sinon": "^16.1.0",
    "tail": "^2.2.6",
    "ts-node": "^10.9.2",
    "typedoc": "^0.26.8",
    "typescript": "^5.4.4",
    "uglify-js": "^3.17.4",
    "util": "^0.12.5",
    "wdio-chromedriver-service": "^8.1.1",
    "webpack-bundle-analyzer": "^4.9.1",
    "xml-js": "^1.6.11"
  },
  "dependencies": {
    "async": "^3.2.1",
    "bikram-sambat": "^1.7.0",
    "body-parser": "^1.20.3",
    "bowser": "^2.11.0",
    "buffer-shims": "^1.0.0",
    "cht-nootils": "^4.2.0",
    "compression": "^1.7.4",
    "cron-validator": "^1.3.1",
    "epi-week": "^0.0.1",
    "express": "^4.21.1",
    "google-libphonenumber": "^3.2.33",
    "gsm": "^0.1.4",
    "helmet": "^3.23.3",
    "http-proxy": "^1.18.1",
    "later": "^1.2.0",
    "locale": "^0.1.0",
    "lodash": "^4.17.21",
    "md5": "^2.3.0",
    "minimist": "^1.2.8",
    "moment": "^2.29.1",
    "morgan": "^1.10.0",
    "mustache": "^4.2.0",
    "node-fetch": "^2.6.9",
    "node-html-parser": "^6.1.12",
    "nools": "^0.4.4",
    "object-path": "^0.11.8",
    "openrosa-formlist": "github:medic/openrosa-formlist#sax",
    "pass-stream": "^1.0.0",
    "pouchdb-adapter-http": "^7.3.1",
    "pouchdb-browser": "^7.3.1",
    "pouchdb-core": "^7.3.1",
    "pouchdb-debug": "^7.2.1",
    "pouchdb-find": "^7.3.1",
    "pouchdb-generate-replication-id": "^7.3.1",
    "pouchdb-mapreduce": "^7.3.1",
    "pouchdb-replication": "^7.3.1",
    "pouchdb-session-authentication": "^1.1.0",
    "prometheus-api-metrics": "^3.2.2",
    "properties": "^1.2.1",
    "rate-limiter-flexible": "^3.0.2",
    "request": "^2.88.2",
    "request-promise-native": "^1.0.9",
    "sanitize-html": "^2.12.1",
    "semver": "^7.5.4",
    "simple-password-tester": "^1.0.0",
    "url": "^0.11.1",
    "url-join": "^4.0.1",
    "uuid": "^8.3.2",
    "winston": "^3.10.0",
    "workbox-build": "^7.0.0",
    "xmlbuilder": "^15.1.1"
  },
  "overrides": {
    "node-fetch": "$node-fetch",
    "nools": {
      "uglify-js": ">=2.6.0"
    }
  }
}
